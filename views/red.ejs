<%- include ('./header.ejs')  %>

<main class="h-full overflow-y-auto">
  <div class="container px-6 mx-auto grid">
    <h2 class="my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200">
      Dashboard
    </h2>

    <!-- With actions -->
    <h4 class="mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300">
      <button id="sendEmailButton" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
        Send Email
      </button>
      
      
     
  
      <!-- Table for displaying red clients -->
      <div class="w-full overflow-hidden rounded-lg shadow-xs">
        <div class="w-full overflow-x-auto">
          <div class="w-full overflow-hidden rounded-lg shadow-xs">
            <div class="w-full overflow-x-auto">
              <table id="data-table" class="w-full whitespace-no-wrap">
                <thead>
                  <tr class="text-xs font-semibold tracking-wide text-left text-gray-500 uppercase border-b dark:border-gray-700 bg-gray-50 dark:text-gray-400 dark:bg-gray-800">
                    <th class="px-4 py-3">Name</th>
                    <th class="px-4 py-3">Phone Number</th>
                    <th class="px-4 py-3">Sq Feet</th>
                    <th class="px-4 py-3">Location</th>
                    <th class="px-4 py-3">Plan</th>
                    <th class="px-4 py-3">Start</th>
                    <th class="px-4 py-3">End</th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y dark:divide-gray-700 dark:bg-gray-800">
                  <% redData.forEach(data => { %>
                    <tr class="text-gray-700 dark:text-gray-400">
                      <td class="px-4 py-3" data-label="Name"><%= data.name %></td>
                      <td class="px-4 py-3" data-label="Phone Number"><%= data.phoneNumber %></td>
                      <td class="px-4 py-3" data-label="Sq Feet"><%= data.sqfeet %></td>
                      <td class="px-4 py-3" data-label="Location"><%= data.placelocation %></td>
                      <td class="px-4 py-3" data-label="Plan"><%= data.plan %></td>
                      <td class="px-4 py-3" data-label="Start"><%= data.startDate.toISOString().split('T')[0] %></td>
                      <td class="px-4 py-3" data-label="End"><%= data.endDate.toISOString().split('T')[0] %></td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>
          </div>
          
        </div>
      </div>
    </div>
  </main>

  



<script>
  const sendEmail = async () => {
    try {
      // Extracting data from the table
      const tableRows = document.querySelectorAll('#data-table tbody tr');
      const dataToSend = [];

      tableRows.forEach(row => {
        const cells = row.querySelectorAll('td');
        const rowData = {
          name: cells[0].textContent,
          phoneNumber: cells[1].textContent,
          location: cells[2].textContent,
          plan: cells[3].textContent,
          startDate: cells[4].textContent,
          endDate: cells[5].textContent
        };
        dataToSend.push(rowData);
      });

      // Send the data via fetch POST request to /sendEmail endpoint
      const response = await fetch('/sendEmail', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(dataToSend)
      });

      if (response.ok) {
        alert('Email sent successfully');
      } else {
        throw new Error('Failed to send email');
      }
    } catch (error) {
      console.error('Error sending email:', error.message);
      alert('Failed to send email');
    }
  };

  // Attach click event listener to Send Email button
  const sendEmailButton = document.getElementById('sendEmailButton');
  sendEmailButton.addEventListener('click', sendEmail);
</script>




    <script src="script.js"></script>
 

<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
 function updateEndDate() {
  const startDateInput = document.getElementById('editstartDate'); // Corrected ID
  const endDateInput = document.getElementById('editendDate');
  const planSelect = document.getElementById('editplan'); // Also corrected ID

  if (startDateInput.value && planSelect.value) {
    const startDate = new Date(startDateInput.value);
    const planDuration = planSelect.value;

    let endDate;

    // Parse the plan duration based on the selected option
    switch (planDuration) {
      case '3m':
        endDate = addMonths(startDate, 3);
        break;
      case '6m':
        endDate = addMonths(startDate, 6);
        break;
      case '9m':
        endDate = addMonths(startDate, 9);
        break;
      case '1y':
        endDate = addMonths(startDate, 12);
        break;
      default:
        // Handle unknown plan duration
        console.error('Unknown plan duration:', planDuration);
        return;
    }

    // Format the endDate to 'YYYY-MM-DD' for input type='date'
    const formattedEndDate = endDate.toISOString().split('T')[0];

    endDateInput.value = formattedEndDate;
  }
}

// Helper function to add months to a date
function addMonths(date, months) {
  const newDate = new Date(date);
  newDate.setMonth(newDate.getMonth() + months);
  return newDate;
}

</script>

</body>
</html>